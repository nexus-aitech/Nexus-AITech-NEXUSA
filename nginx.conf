# =========================
# NEXUSA Nginx (HTTPS + proxy, hardened)
# =========================

# --- HTTP (80): redirect to HTTPS ---
server {
  listen 80 default_server;
  server_name _;

  location = /health {
    return 200 '{"status":"ok"}';
    add_header Content-Type application/json;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# --- HTTPS server ---
server {
  listen 443 ssl http2;
  server_name _;

  ssl_certificate     D:/NEXUSA/ssl/fullchain.pem;
  ssl_certificate_key D:/NEXUSA/ssl/nexus-aitech_net.key;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;

  client_max_body_size 10m;
  keepalive_timeout 65;

  gzip on;
  gzip_types application/json application/javascript text/css text/plain application/xml text/xml;

  # --- Security Headers ---
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' https:;" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

  # --- Rate limiting ---
  limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
  limit_req zone=one burst=20 nodelay;

  # health endpoint
  location = /health {
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_connect_timeout 15s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
  }

  # main proxy to FastAPI
  location / {
    proxy_pass http://127.0.0.1:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_connect_timeout 15s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    proxy_buffering on;
    proxy_buffers 16 16k;
    proxy_busy_buffers_size 24k;

    proxy_redirect off;
  }
}
